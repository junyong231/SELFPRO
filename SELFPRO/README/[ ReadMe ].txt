「ReadMe」 

# 実行環境
ポート: 80 (接続アドレス: http://localhost/)
	・ application.propertiesでserver.port=80の設定を変更すれば、必要に応じて他のポートに変更可能です。

データベース: H2 Database（別途インストール・設定不要）  
　　・ 実行時に自動生成され、DBファイルはプロジェクトの `/data` ディレクトリに保存されます。

ビルドツール: Gradle


#実行方法 (STS基準):

1. STSを起動します。

2. メニューバーから File (ファイル) > Import (インポート) を選択します。

3. 表示されたダイアログで、Gradle > Existing Gradle Project (既存のGradleプロジェクト) を選択し、Next (次へ) をクリックします。

4. Project root directory (プロジェクトルートディレクトリ) の欄に、お持ちのプロジェクトのルートフォルダ、つまり ./SELFPRO フォルダのパスを設定します。

5. Finish (完了) をクリックしてプロジェクトのインポートを完了させます。

6. その後、サーバー起動後、URLにアクセスします

# サイト説明

現実の行動をゲームのように視覚化し、日々の課題を達成することで経験値が貯まり、レベルアップしていく仕組みにより、  
モチベーション向上と継続的な自己成長をサポートすることを目的としています。

# 主な機能

- 会員登録/ログイン

- 明日の課題設定
	・ 修正、削除が可能

- 今日の課題達成状況の決算
	・ 自分のレベル、XPポイント計算 (課題成功時 XPポイント +5, 失敗時 XPポイント -5)
	・ 毎日午前0時までに決算しない場合、自動的に全て未達成とみなして計算されます
	・ 課題に対する決算は1日に1回のみ可能です
	・ 決算時、明日の自分を応援する一言を入力可能 (これは翌日のメインページに反映されます)

- レベル
	・ レベルは経験値を100獲得するごとに1ずつ上昇します
	・ レベルは最低1以上ですが、総経験値によって減少する場合があります (例: Lv10 → Lv9)

- その他実装
	・ 会員登録の入力検証 (最低文字数、重複ID登録防止など)
	・ 非会員のアクセス防止および404, 500エラーページ設定
	・ TEST PAGEでは、午前0時に実行されるスケジューラーロジックの手動テストや、その他の開発検証機能を実行できます。

* ログイン後、右上にあるTEST PAGETEST PAGEにアクセスして機能をご利用いただければ幸いです。
  ( 明日のタスク登録機能のようなものが、入力後一日経過しないと今日の目標として機能しないためです。 )

# 生成AIから得た支援


・ ブートストラップ、JavaScript (時間節約のため)

・ スケジューラー (初めて使用)

・ SecurityFilterChain関連

・ @RequestParamでbooleanリストを受け取る際の問題の解決
　- @RequestParam(name ="isComplete", required = false) List<Boolean> isComplete を使用すると、
　未チェック項目が送信されず、trueのみが届いてリストのインデックスがずれる問題が発生しました。
　- GPTの提案により、DTOおよびFormオブジェクトを作成し、タスク1つ1つをオブジェクトとして送信する方式に変更して解決しました。

・404, 500 エラーページ関連メソッド (CustomErrorController)

・ MemberRepository の updateMemberLevel で @Modifying(clearAutomatically = true, flushAutomatically = true) がないと、@Transactional によって更新前のDB値が送信されることを知り、修正しました。


# 制作時間 

約45時間 





