plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.selfpro'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-security'
	
	//타임리프
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
	// 타임리프의 확장 기능 모듈 = 
    // 타임리프에서 타임리프 템플릿 엔진 + 스프링 시큐리티 프레임 워크를 함께 사용(연동)할 때 필요
    // 이게 있어서 sec:시큐리티 코딩 가능한 것!!
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	    
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	//롬복
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	//h2 DB
	runtimeOnly 'com.h2database:h2'
	// 유효성 검사 모듈 추가
    implementation 'org.springframework.boot:spring-boot-starter-validation'
	
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	
	//JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	
	//자동 서버 재실행
	// developmentOnly 'org.springframework.boot:spring-boot-devtools'
}

tasks.named('test') {
	useJUnitPlatform()
}
